import db

#####################################################################################
# INSTRUCTIONS:                                                                     #
# Download & setup postgresql db                                                    #
# run postgresql db/local server                                                    #
# 'pip install psycopg2' or 'conda install psycopg2'                                #
# Update 'db_config.py' to your db name/db user                                     #
# create test table and populate it with data - in my case I used 'accounts' table  #
#   see 'test_data.png'                                                             #
# test different db commands using db.interact(...)                                 #
#####################################################################################

# CLI Infoâ€º
    # print("Simple command line interface")
    # choice = input("Would you like to see all accounts? 'y' or 'n''\n")

    # if choice == 'y':
    #     output = db.interact("SELECT * FROM premium;")
    #     print_tuples(output)

# SIGN IN SCREEN IDEA
    # Need to get curr_user: UserID of currently signed in user; used in queries

# Register Guest User

# Register Premium User

# Register Artist

# Sign in 
    # Possible implementation with password; else, just switch CLI view
    # Check for password correctness, then switch CLI view

#####################
# GENERAL FUNCTIONS #
#####################

# Prints table from the return value of a db.interact statement
def print_tuples(rows):
    for row in rows:
        for field in row:
                print(field, end='\t')
        print()

# Get current username from user
def signin():
    return input('Enter your username: ') # Need to error check in database



##########################
# PREMIUM USER FUNCTIONS #
##########################

# Follow an Artist by UserID
def follow(curr_user):
    follow_id = input('Follow user with username: ')
    db.interact(f'INSERT INTO follows VALUES(\'{curr_user}\', \'{follow_id}\');')

# View Artists Followed by User
def view_following(curr_user):
    output = db.interact(f'SELECT following FROM follows WHERE follower = \'{curr_user}\';')
    print_tuples(output)

# Like a Song by SongID
def like(curr_user):
    like_id = input('Like song with SongID: ')
    db.interact(f'INSERT INTO likes VALUES(\'{curr_user}\', {like_id});')

# View Liked Songs
def view_liked(curr_user):
    output = db.interact(f'SELECT title, createdby FROM likes NATURAL JOIN song WHERE username = \'{curr_user}\';')
    print_tuples(output)

''' New SQL Additions - Cody'''
